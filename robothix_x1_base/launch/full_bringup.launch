<launch>
	<!-- # CONTROLS # -->
		<!-- DualShock 4 Controller -->
		<!-- Joysticks -->
    		<include file="$(find robothix_x1_control)/launch/joy.launch" />
		
	<!-- # SENSORS # -->
		<!-- uBlox GNNS/IMU Sensor] -->
		<include file="$(find ublox_gps)/launch/ublox_device.launch" />
	
		<!-- Phidgets Spatial Magnetometer Sensor -->
		<include file="$(find phidgets_spatial)/launch/spatial.launch" />
	
	<!-- # SENSOR SIGNAL CONDITIONING # -->	
		<!-- TBD [kalman_filter] -->
					
	<!-- # NAVIGATION AND ROUTING # -->
		<!-- GPS controlled navigation to a given Point --> 
		<!-- NOTE: (node should be started manually via "rosrun", since node needs user input) -->
		<!-- arg name="gotogoalGPS" default="1.0" -->  
		<!-- node name="gotogoalGPS" pkg="robothix_x1_navigation" type="gotogoalGPS" launch-prefix="bash -c 'sleep $(arg gotogoalGPS); $0 $@' " -->		
		<!-- include file="$(find robothix_x1_navigation)/launch/start_gotogoal.launch" /> -->
	
	<!-- # ACTUATOR SIGNAL PRECONDITIONING #-->
		<!-- twist_mux -->		    
		<node pkg="twist_mux" type="twist_mux" name="twist_mux">
        		<remap from="cmd_vel_out" to="twist_mux/cmd_vel"/>
        		<rosparam command="load" file="$(find robothix_x1_control)/config/twist_mux.yaml" />
    		</node>
			<!-- starts Nodes: -->
			<!-- twist_mux -->
			<!-- with Config Files: -->
			<!-- twist_mux.yaml -->
		
		<!-- twist_to_diff_motor -->
		<node pkg="robothix_x1_base" type="twist_to_diff_motors" name="twist_to_diff_motors" />
		
		<!-- driver control and feedback -->
		<!-- see  ACTUATORS -->
		
		<!-- odometry_msg_creation -->
		<node pkg="robothix_x1_base" type="odometry_msg_creation" name="odometry_msg_creation" />
		
	<!-- # ACTUATORS # -->
		<!-- Phidgets Drivers -->
		<!-- include file="$(find robothix_x1_bringup)/launch/phidget_drive.launch" /> -->
			<!-- starts Nodes: -->
			<!-- PhidgetsMotorsNodelet_left -->
			<!-- PhidgetsMotorsNodelet_right -->
		
		<!-- Phidgets Driver Controls and Sensor feedback (replaces "Phidgets Drivers" above) -->
		<node pkg="robothix_x1_base" type="drive_feedback.py" name="drive_feedback" />
			
		<!-- Dynamixel Pan-Tilt Unit for Camera and Headlight -->
    		<!-- include file="$(find led_control)/launch/led_control.launch" / -->
    		
    		<!-- Signal LEDs -->
	    		<!-- Logic node -->
	    		<include file="$(find led_control)/launch/led_control.launch" />
	    		
	    		<!-- ROSserial Interface node for ARDUINO -->
	    		<node pkg="rosserial_arduino" type="serial_node.py" name="serial_node" />
	    		

</launch>
